name: Tests

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  cache-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Playwright Docker Image
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: playwright-docker-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            playwright-docker-${{ runner.os }}-

      - name: Pre-pull Playwright Docker Image
        run: |
          docker pull mcr.microsoft.com/playwright:v1.50.1-noble

  desktop-tests:
    runs-on: ubuntu-latest
    needs: cache-docker
    container:
      image: mcr.microsoft.com/playwright:v1.50.1-noble
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          cd playwright
          npm install

      - name: Run all except mobile-chrome & performance
        run: |
          cd playwright
          HOME=/root npx playwright test --project=chromium --project=firefox --grep-invert="@performance"

      - name: Upload HTML report artifact
        if: always()  # Ensures the report uploads even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report-desktop
          path: playwright/playwright-report

      - name: Install rsync (required for deployment)
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Publish Playwright HTML Report to GitHub Pages
        if: always()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: playwright/playwright-report

  mobile-tests:
    runs-on: ubuntu-latest
    needs: cache-docker
    container:
      image: mcr.microsoft.com/playwright:v1.50.1-noble
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          cd playwright
          npm install

      - name: Run mobile-chrome tests
        run: |
          cd playwright
          npx playwright test --project=mobile-chrome --grep-invert='@performance|@bug|@visual'

      - name: Upload HTML report artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report-mobile
          path: playwright/playwright-report

  performance-tests:
    runs-on: ubuntu-latest
    needs: cache-docker
    container:
      image: mcr.microsoft.com/playwright:v1.50.1-noble
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          cd playwright
          npm install

      - name: Run performance tests on chromium
        run: |
          cd playwright
          npx playwright test --project=chromium --grep="@performance"

      - name: Upload HTML report artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report-performance
          path: playwright/playwright-report

  visual-comparison:
    runs-on: ubuntu-latest
    needs: cache-docker
    container:
      image: mcr.microsoft.com/playwright:v1.50.1-noble
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          cd playwright
          npm install

      - name: Run visual comparison test (Chromium only)
        run: |
          cd playwright
          npx playwright test tests/visual-comparison.spec.ts --project=chromium

      - name: Upload HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report-visual-comparison
          path: playwright/playwright-report

      - name: Install rsync (required for deployment)
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Deploy failed visual tests to GitHub Pages
        if: failure()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: playwright/screenshots/
          clean: true


  k6-tests:
    runs-on: ubuntu-latest
    needs: cache-docker
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Run K6 test
        run: |
          docker run --rm -v "$(pwd)/K6:/scripts" grafana/k6 run /scripts/performance-test.js
